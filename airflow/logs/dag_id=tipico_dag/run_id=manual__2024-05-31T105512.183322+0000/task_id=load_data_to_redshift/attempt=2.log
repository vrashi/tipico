[2024-05-31T11:00:20.853+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: tipico_dag.load_data_to_redshift manual__2024-05-31T10:55:12.183322+00:00 [queued]>
[2024-05-31T11:00:20.861+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: tipico_dag.load_data_to_redshift manual__2024-05-31T10:55:12.183322+00:00 [queued]>
[2024-05-31T11:00:20.862+0000] {taskinstance.py:2170} INFO - Starting attempt 2 of 2
[2024-05-31T11:00:20.877+0000] {taskinstance.py:2191} INFO - Executing <Task(PythonOperator): load_data_to_redshift> on 2024-05-31 10:55:12.183322+00:00
[2024-05-31T11:00:20.884+0000] {standard_task_runner.py:60} INFO - Started process 32722 to run task
[2024-05-31T11:00:20.887+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'tipico_dag', 'load_data_to_redshift', 'manual__2024-05-31T10:55:12.183322+00:00', '--job-id', '366', '--raw', '--subdir', 'DAGS_FOLDER/tipico_dag.py', '--cfg-path', '/tmp/tmp02a67mgi']
[2024-05-31T11:00:20.889+0000] {standard_task_runner.py:88} INFO - Job 366: Subtask load_data_to_redshift
[2024-05-31T11:00:20.937+0000] {task_command.py:423} INFO - Running <TaskInstance: tipico_dag.load_data_to_redshift manual__2024-05-31T10:55:12.183322+00:00 [running]> on host a71bb5ce980f
[2024-05-31T11:00:21.019+0000] {taskinstance.py:2480} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='tipico_dag' AIRFLOW_CTX_TASK_ID='load_data_to_redshift' AIRFLOW_CTX_EXECUTION_DATE='2024-05-31T10:55:12.183322+00:00' AIRFLOW_CTX_TRY_NUMBER='2' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-05-31T10:55:12.183322+00:00'
[2024-05-31T11:00:21.068+0000] {logging_mixin.py:188} INFO -    Unnamed: 0      id  ... eventMetadata aggregatedEventPoints
0           0  816775  ...           NaN                   NaN
1           1  814918  ...           NaN                   NaN
2           2  814933  ...           NaN                   NaN
3           3  814872  ...           NaN                   NaN
4           4  816776  ...           NaN                   NaN

[5 rows x 24 columns]
[2024-05-31T11:00:21.074+0000] {taskinstance.py:2698} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 433, in _execute_task
    result = execute_callable(context=context, **execute_callable_kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/operators/python.py", line 199, in execute
    return_value = self.execute_callable()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/operators/python.py", line 216, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
  File "/opt/airflow/dags/tipico_etl.py", line 112, in load_data_to_redshift
    df = get_participants(df)
  File "/opt/airflow/dags/tipico_etl.py", line 16, in get_participants
    list_in_cell = json.loads(row["participants"])
  File "/usr/local/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/usr/local/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/local/lib/python3.8/json/decoder.py", line 353, in raw_decode
    obj, end = self.scan_once(s, idx)
json.decoder.JSONDecodeError: Expecting ',' delimiter: line 1 column 13000 (char 12999)
[2024-05-31T11:00:21.092+0000] {taskinstance.py:1138} INFO - Marking task as FAILED. dag_id=tipico_dag, task_id=load_data_to_redshift, execution_date=20240531T105512, start_date=20240531T110020, end_date=20240531T110021
[2024-05-31T11:00:21.108+0000] {standard_task_runner.py:107} ERROR - Failed to execute job 366 for task load_data_to_redshift (Expecting ',' delimiter: line 1 column 13000 (char 12999); 32722)
[2024-05-31T11:00:21.143+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 1
[2024-05-31T11:00:21.163+0000] {taskinstance.py:3280} INFO - 0 downstream tasks scheduled from follow-on schedule check
